{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { NameSpace } from '../const';\n// import { addDays } from 'date-fns';\n\nconst initialState = {\n  // companions: 1,\n  // duration: 2,\n  // dateState: [\n  //   {\n  //     startDate: new Date(),\n  //     endDate: addDays(new Date(), 1),\n  //     key: 'selection',\n  //   },\n  // ],\n  choosenLetter: 'А',\n  choosenContinent: 'Европа',\n  // Инициализируем выбранный континент\n  isSelectCountryInputActive: false\n};\nexport const slice = {\n  app: NameSpace.appSlice\n};\nexport const appSlice = createSlice({\n  name: slice.app,\n  initialState,\n  reducers: {\n    // setCompanions: (state, action: PayloadAction<number>) => {\n    //   state.companions = action.payload;\n    // },\n    // setDuration: (state, action: PayloadAction<number>) => {\n    //   state.duration = action.payload;\n    // },\n    // setDateState: (state, action: PayloadAction<DateState[]>) => {\n    //   state.dateState = action.payload;\n    // },\n    setLetter: (state, action) => {\n      state.choosenLetter = action.payload;\n    },\n    setContinent: (state, action) => {\n      // Добавляем редуктор для установки выбранного континента\n      state.choosenContinent = action.payload;\n    },\n    setIsSelectCountryInputActive: state => {\n      state.isSelectCountryInputActive = !state.isSelectCountryInputActive;\n    }\n  }\n});\nexport const {\n  // setCompanions,\n  // setDateState,\n  // setDuration,\n  setLetter,\n  setContinent,\n  setIsSelectCountryInputActive\n} = appSlice.actions;","map":{"version":3,"names":["createSlice","NameSpace","initialState","choosenLetter","choosenContinent","isSelectCountryInputActive","slice","app","appSlice","name","reducers","setLetter","state","action","payload","setContinent","setIsSelectCountryInputActive","actions"],"sources":["C:/Projects/intern-pognali-2-6/my-app/src/store/app-slice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\nimport { NameSpace } from '../const';\r\n// import { addDays } from 'date-fns';\r\n\r\nexport type DateState = {\r\n  startDate: Date;\r\n  endDate: Date;\r\n  key: string;\r\n};\r\n\r\nexport type AppSlice = {\r\n  // companions: number;\r\n  // duration: number;\r\n  // dateState: DateState[];\r\n  choosenLetter: string;\r\n  choosenContinent: string; // Добавляем состояние для выбранного континента\r\n  isSelectCountryInputActive: boolean;\r\n};\r\n\r\nconst initialState: AppSlice = {\r\n  // companions: 1,\r\n  // duration: 2,\r\n  // dateState: [\r\n  //   {\r\n  //     startDate: new Date(),\r\n  //     endDate: addDays(new Date(), 1),\r\n  //     key: 'selection',\r\n  //   },\r\n  // ],\r\n  choosenLetter: 'А',\r\n  choosenContinent: 'Европа', // Инициализируем выбранный континент\r\n  isSelectCountryInputActive: false,\r\n};\r\n\r\nexport const slice = {\r\n  app: NameSpace.appSlice,\r\n};\r\n\r\nexport const appSlice = createSlice({\r\n  name: slice.app,\r\n  initialState,\r\n  reducers: {\r\n    // setCompanions: (state, action: PayloadAction<number>) => {\r\n    //   state.companions = action.payload;\r\n    // },\r\n    // setDuration: (state, action: PayloadAction<number>) => {\r\n    //   state.duration = action.payload;\r\n    // },\r\n    // setDateState: (state, action: PayloadAction<DateState[]>) => {\r\n    //   state.dateState = action.payload;\r\n    // },\r\n    setLetter: (state, action: PayloadAction<string>) => {\r\n      state.choosenLetter = action.payload;\r\n    },\r\n    setContinent: (state, action: PayloadAction<string>) => { // Добавляем редуктор для установки выбранного континента\r\n      state.choosenContinent = action.payload;\r\n    },\r\n    setIsSelectCountryInputActive: (state) => {\r\n      state.isSelectCountryInputActive = !state.isSelectCountryInputActive;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n    // setCompanions,\r\n    // setDateState,\r\n    // setDuration,\r\n    setLetter,\r\n    setContinent,\r\n    setIsSelectCountryInputActive,\r\n} = appSlice.actions;\r\n"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAC7D,SAASC,SAAS,QAAQ,UAAU;AACpC;;AAiBA,MAAMC,YAAsB,GAAG;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,aAAa,EAAE,GAAG;EAClBC,gBAAgB,EAAE,QAAQ;EAAE;EAC5BC,0BAA0B,EAAE;AAC9B,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG;EACnBC,GAAG,EAAEN,SAAS,CAACO;AACjB,CAAC;AAED,OAAO,MAAMA,QAAQ,GAAGR,WAAW,CAAC;EAClCS,IAAI,EAAEH,KAAK,CAACC,GAAG;EACfL,YAAY;EACZQ,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACnDD,KAAK,CAACT,aAAa,GAAGU,MAAM,CAACC,OAAO;IACtC,CAAC;IACDC,YAAY,EAAEA,CAACH,KAAK,EAAEC,MAA6B,KAAK;MAAE;MACxDD,KAAK,CAACR,gBAAgB,GAAGS,MAAM,CAACC,OAAO;IACzC,CAAC;IACDE,6BAA6B,EAAGJ,KAAK,IAAK;MACxCA,KAAK,CAACP,0BAA0B,GAAG,CAACO,KAAK,CAACP,0BAA0B;IACtE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACT;EACA;EACA;EACAM,SAAS;EACTI,YAAY;EACZC;AACJ,CAAC,GAAGR,QAAQ,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}