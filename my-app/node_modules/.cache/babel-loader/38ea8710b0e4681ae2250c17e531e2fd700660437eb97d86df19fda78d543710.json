{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\intern-pognali-2-6\\\\my-app\\\\src\\\\components\\\\blocks\\\\selected-coutry-input\\\\selected-country-input.tsx\",\n  _s = $RefreshSig$();\nimport { letterArray } from \"../../../const\";\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/hooks\";\nimport { changeChoosenCountry, removeChoosenCountry, setLetter } from \"../../../store/app-slice\";\nimport { useGetCountriesNamesQuery } from \"../../../store/countries-api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedCountryInput = ({\n  selectedCountry\n}) => {\n  _s();\n  const dispatch = useAppDispatch();\n  const choosenLetter = useAppSelector(state => state.appSlice.choosenLetter);\n  const {\n    data: filteredCountries,\n    isLoading\n  } = useGetCountriesNamesQuery(choosenLetter);\n  const handleSelectCountryInputClick = newCountry => {\n    const countriesToChange = {\n      currentCountry: selectedCountry,\n      newCountry: newCountry\n    };\n    dispatch(changeChoosenCountry(countriesToChange));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step__country\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `step__input-container `,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"step__input-country\",\n        value: selectedCountry.name\n        // onClick={() => dispatch(setIsSelectCountryInputActive())}\n        ,\n        onClick: evt => {\n          var _evt;\n          console.log(evt.target);\n          (_evt = evt('.step__country')) === null || _evt === void 0 ? void 0 : _evt.classList.toggle('active');\n          // dispatch(setIsSelectCountryInputActive());\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step__country-list-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"step__header\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"route__letters-list\",\n          children: letterArray.map((letter, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"step__letter-item\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `step__letter-button ${choosenLetter === letter ? 'active' : ''}`,\n                type: \"button\",\n                onClick: () => dispatch(setLetter(letter)),\n                children: letter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"step__search-results-list\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 39\n          }, this), filteredCountries === null || filteredCountries === void 0 ? void 0 : filteredCountries.map(country => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"step__search-results-item\",\n              onClick: evt => {\n                var _evt$currentTarget$cl;\n                handleSelectCountryInputClick(country);\n                (_evt$currentTarget$cl = evt.currentTarget.closest('.step__input-container')) === null || _evt$currentTarget$cl === void 0 ? void 0 : _evt$currentTarget$cl.classList.remove('active');\n              },\n              children: country.name\n            }, country.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step__indicator\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"step__button\",\n        type: \"button\",\n        onClick: () => dispatch(removeChoosenCountry(selectedCountry))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectedCountryInput, \"fwgVDQgVX4f1wS8F38YVrnlZvUI=\", false, function () {\n  return [useAppDispatch, useAppSelector, useGetCountriesNamesQuery];\n});\n_c = SelectedCountryInput;\nvar _c;\n$RefreshReg$(_c, \"SelectedCountryInput\");","map":{"version":3,"names":["letterArray","useAppDispatch","useAppSelector","changeChoosenCountry","removeChoosenCountry","setLetter","useGetCountriesNamesQuery","jsxDEV","_jsxDEV","SelectedCountryInput","selectedCountry","_s","dispatch","choosenLetter","state","appSlice","data","filteredCountries","isLoading","handleSelectCountryInputClick","newCountry","countriesToChange","currentCountry","className","children","value","name","onClick","evt","_evt","console","log","target","classList","toggle","fileName","_jsxFileName","lineNumber","columnNumber","map","letter","index","type","country","_evt$currentTarget$cl","currentTarget","closest","remove","_c","$RefreshReg$"],"sources":["C:/Стажировка/intern-pognali-2-6/my-app/src/components/blocks/selected-coutry-input/selected-country-input.tsx"],"sourcesContent":["import { letterArray } from \"../../../const\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/hooks\";\r\nimport { changeChoosenCountry, removeChoosenCountry, setLetter } from \"../../../store/app-slice\";\r\nimport { useGetCountriesNamesQuery } from \"../../../store/countries-api\";\r\nimport { CountriesToChange, Country } from \"../../../types\";\r\n\r\n\r\n\r\ntype SelectedCoutriesInputProps = {\r\n    selectedCountry: Country;\r\n}\r\n\r\nexport const SelectedCountryInput = ({ selectedCountry }: SelectedCoutriesInputProps) => {\r\n    const dispatch = useAppDispatch();\r\n    const choosenLetter = useAppSelector(state => state.appSlice.choosenLetter);\r\n    const { data: filteredCountries, isLoading } = useGetCountriesNamesQuery(choosenLetter);\r\n    const handleSelectCountryInputClick = (newCountry: Country): void => {\r\n        const countriesToChange: CountriesToChange = {\r\n            currentCountry: selectedCountry,\r\n            newCountry: newCountry\r\n        };\r\n        dispatch(changeChoosenCountry(countriesToChange));\r\n    }\r\n\r\n    return (\r\n        <div className=\"step__country\">\r\n            <div className={`step__input-container `}>\r\n                <input className='step__input-country' value={selectedCountry.name}\r\n                    // onClick={() => dispatch(setIsSelectCountryInputActive())}\r\n                    onClick={(evt) => {\r\n                        console.log(evt.target);\r\n                        evt('.step__country')?.classList.toggle('active');\r\n                        // dispatch(setIsSelectCountryInputActive());\r\n                    }}\r\n                >\r\n\r\n                </input>\r\n                <div className=\"step__country-list-wrapper\">\r\n                    <h3 className=\"step__header\">\r\n                        Выберите страну\r\n                    </h3>\r\n                    <ul className=\"route__letters-list\">\r\n                        {letterArray.map((letter: string, index: number) => {\r\n                            return (\r\n                                <li className=\"step__letter-item\" key={index}>\r\n                                    <button className={`step__letter-button ${choosenLetter === letter ? 'active' : ''}`}\r\n                                        type=\"button\"\r\n                                        onClick={() => dispatch(setLetter(letter))}>{letter}\r\n                                    </button>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                    <ol className=\"step__search-results-list\">\r\n                        {isLoading && <div>Loading...</div>}\r\n                        {filteredCountries?.map((country: Country) => {\r\n                            return (\r\n                                <li className=\"step__search-results-item\"\r\n                                    key={country.name}\r\n                                    onClick={(evt) => {\r\n                                        handleSelectCountryInputClick(country);\r\n                                        evt.currentTarget.closest('.step__input-container')?.classList.remove('active');\r\n                                    }}>{country.name}</li>\r\n                            )\r\n                        })}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n            <div className=\"step__indicator\">\r\n                {/*<img className=\"step__flag\" src={selectedCountry.flag} alt=\"country flag image\" />*/}\r\n                <button className=\"step__button\" type=\"button\"\r\n                    onClick={() => dispatch(removeChoosenCountry(selectedCountry))}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}