{"ast":null,"code":"import React from'react';import MiniPlan from\"../miniplan/miniplan\";import{ReactComponent as NextStep}from'../../../assets/img/nextstep.svg';import{letterArray}from'../../../const';import{useAppDispatch,useAppSelector}from'../../../hooks/hooks';import{addChoosenCountries,setDataToPostCountries,setIsSelectCountryInputActive,setLetter}from'../../../store/app-slice';import{useGetCountriesNamesQuery}from'../../../store/countries-api';import{SelectedCountryInput}from'../selected-coutry-input/selected-country-input';import{ReactComponent as Plus}from'../../../assets/img/plusbutton.svg';import{ReactComponent as ArrowBack}from'../../../assets/img/arrow_back.svg';// type CountriesItemProps = {\n//   countriesData: CountryData[] | null;\n// };\n// type CountriesItemProps = {\n//   countriesData: CountryData[] | null;\n// };\n// { countriesData }: CountriesItemProps\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Route(){const dispatch=useAppDispatch();const choosenLetter=useAppSelector(state=>state.appSlice.choosenLetter);//здесь выбранная буква\nconst{data:filteredCountries,isLoading}=useGetCountriesNamesQuery(choosenLetter);//filteredCountries это массив объектов со странами по выбранной букве\nconst selectedCountries=useAppSelector(state=>state.appSlice.choosenCountries);//выбранные страны\nconst handleCountryClick=country=>{dispatch(addChoosenCountries(country));dispatch(setIsSelectCountryInputActive());};return/*#__PURE__*/_jsxs(\"div\",{className:\"route\",id:\"route\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"route__header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"route__heading\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"route__title\",children:\"\\u0428\\u0430\\u0433 2. \\u041C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"route__notion\",children:[\"\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043D\\u044B, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0435 \\u0432\\u044B \\u0445\\u043E\\u0442\\u0435\\u043B\\u0438 \\u0431\\u044B \\u043F\\u043E\\u0441\\u0435\\u0442\\u0438\\u0442\\u044C.\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u042D\\u0442\\u043E \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043E\\u0434\\u043D\\u0430 \\u0438\\u043B\\u0438 \\u0441\\u0440\\u0430\\u0437\\u0443 \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E.\"]})]}),/*#__PURE__*/_jsx(MiniPlan,{})]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"route__list\",children:[selectedCountries.length>0?selectedCountries.map(selectedCountry=>{return/*#__PURE__*/_jsx(SelectedCountryInput,{selectedCountry:selectedCountry});}):'',selectedCountries.length>3?'':/*#__PURE__*/_jsxs(\"li\",{className:\"route__item\",children:[/*#__PURE__*/_jsxs(\"h3\",{onClick:evt=>{var _evt$currentTarget$cl;return(_evt$currentTarget$cl=evt.currentTarget.closest('li'))===null||_evt$currentTarget$cl===void 0?void 0:_evt$currentTarget$cl.classList.toggle('active');},children:[/*#__PURE__*/_jsx(\"p\",{className:\"route__add-country\",children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u0430\\u043D\\u0443\"}),/*#__PURE__*/_jsx(\"p\",{className:\"route__choose-country\",children:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0443\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"route__btn-plus\",children:[\" \",/*#__PURE__*/_jsx(Plus,{}),\" \"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"route__btn-arrow\",children:[\" \",/*#__PURE__*/_jsx(ArrowBack,{}),\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"route__countries-wrapper\",children:[/*#__PURE__*/_jsx(\"ul\",{className:\"route__letters-list\",children:letterArray.map((letter,index)=>{return/*#__PURE__*/_jsx(\"li\",{className:\"step__letter-item\",children:/*#__PURE__*/_jsx(\"button\",{className:\"step__letter-button \".concat(choosenLetter===letter?'active':''),type:\"button\",onClick:()=>dispatch(setLetter(letter)),children:letter})},index);})}),/*#__PURE__*/_jsxs(\"ul\",{className:\"route__counties-list\",children:[isLoading&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),filteredCountries===null||filteredCountries===void 0?void 0:filteredCountries.map(country=>{return/*#__PURE__*/_jsx(\"li\",{className:\"route__counties-item counties\",onClick:evt=>{var _evt$currentTarget$cl2;handleCountryClick(country);(_evt$currentTarget$cl2=evt.currentTarget.closest('.route__item'))===null||_evt$currentTarget$cl2===void 0?void 0:_evt$currentTarget$cl2.classList.remove('active');},children:country.name},country.name);})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"group-btn\",children:[/*#__PURE__*/_jsxs(\"a\",{className:\"route-btn\",href:\"#entertainment\",onClick:()=>setDataToPostCountries(),children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439 \\u0448\\u0430\\u0433\"}),/*#__PURE__*/_jsx(NextStep,{})]}),/*#__PURE__*/_jsxs(\"a\",{href:\"#dates\",className:\"route-btn btn-back\",children:[/*#__PURE__*/_jsx(NextStep,{}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u041D\\u0430 \\u0448\\u0430\\u0433 \\u043D\\u0430\\u0437\\u0430\\u0434\"})]})]})]});}// function Route({ countriesData }: CountriesItemProps): JSX.Element {\n//   return (\n//     <section className=\"route\">\n//       <div className=\"route__header\">\n//         <h2 className=\"route__title\">\n//           Шаг 2. Маршрут\n//         </h2>\n//         <p className=\"route__notion\">\n//           Укажите страны, которые вы хотели бы посетить. Это может быть одна или сразу несколько.\n//         </p>\n//         <MiniPlan />\n//       </div>\n//       <ul className=\"route__counties-list\">\n//         <li className=\"route__counties-item counties\">\n//           {countriesData?.length ? (\n//             <>\n//               <ul className=\"counties__list\">\n//                 {countriesData?.map((countryData) => <CountryItem countryData={countryData} />)}\n//               </ul>\n//             </>\n//           ) : null}\n//         </li>\n//         <li className=\"route__counties-item\">\n//           {countriesData?.length ? (\n//             <>\n//               <ul className=\"\">\n//                 {countriesData?.map((countryData) => <CountryItem countryData={countryData} />)}\n//               </ul>\n//             </>\n//           ) : null}\n//         </li>\n//         <li className=\"route__counties-item\">\n//           {countriesData?.length ? (\n//             <>\n//               <ul className=\"\">\n//                 {countriesData?.map((countryData) => <CountryItem countryData={countryData} />)}\n//               </ul>\n//             </>\n//           ) : null}\n//         </li>\n//         <li className=\"route__counties-item\">\n//           {countriesData?.length ? (\n//             <>\n//               <ul className=\"\">\n//                 {countriesData?.map((countryData) => <CountryItem countryData={countryData} />)}\n//               </ul>\n//             </>\n//           ) : null}\n//         </li>\n//       </ul>\n//       <div>\n//         <p>\n//           Добавить страну\n//         </p>\n//       </div>\n//       <a href=\"#\">\n//         <span>Следующий шаг</span>\n//         <NextStep />\n//       </a>\n//       <a href=\"#\">\n//         <span>Предыдущий шаг</span>\n//         <NextStep />\n//       </a>\n//     </section>\n//   );\n// }\nexport default Route;","map":{"version":3,"names":["React","MiniPlan","ReactComponent","NextStep","letterArray","useAppDispatch","useAppSelector","addChoosenCountries","setDataToPostCountries","setIsSelectCountryInputActive","setLetter","useGetCountriesNamesQuery","SelectedCountryInput","Plus","ArrowBack","jsx","_jsx","jsxs","_jsxs","Route","dispatch","choosenLetter","state","appSlice","data","filteredCountries","isLoading","selectedCountries","choosenCountries","handleCountryClick","country","className","id","children","length","map","selectedCountry","onClick","evt","_evt$currentTarget$cl","currentTarget","closest","classList","toggle","letter","index","concat","type","_evt$currentTarget$cl2","remove","name","href"],"sources":["C:/Стажировка/intern-pognali-2-6/my-app/src/components/blocks/route/route.tsx"],"sourcesContent":["import React from 'react';\r\nimport MiniPlan from \"../miniplan/miniplan\";\r\nimport { ReactComponent as NextStep } from '../../../assets/img/nextstep.svg';\r\nimport { letterArray } from '../../../const';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/hooks';\r\nimport { addChoosenCountries, setDataToPostCountries, setIsSelectCountryInputActive, setLetter } from '../../../store/app-slice';\r\nimport { useGetCountriesNamesQuery } from '../../../store/countries-api';\r\nimport { Country } from '../../../types';\r\nimport { SelectedCountryInput } from '../selected-coutry-input/selected-country-input';\r\nimport {ReactComponent as Plus} from '../../../assets/img/plusbutton.svg'\r\nimport {ReactComponent as ArrowBack} from '../../../assets/img/arrow_back.svg'\r\n\r\n\r\n// type CountriesItemProps = {\r\n//   countriesData: CountryData[] | null;\r\n// };\r\n\r\n// type CountriesItemProps = {\r\n//   countriesData: CountryData[] | null;\r\n// };\r\n// { countriesData }: CountriesItemProps\r\n\r\nfunction Route(): JSX.Element {\r\n  const dispatch = useAppDispatch();\r\n  const choosenLetter = useAppSelector(state => state.appSlice.choosenLetter); //здесь выбранная буква\r\n  const { data: filteredCountries, isLoading } = useGetCountriesNamesQuery(choosenLetter); //filteredCountries это массив объектов со странами по выбранной букве\r\n  const selectedCountries = useAppSelector(state => state.appSlice.choosenCountries); //выбранные страны\r\n  const handleCountryClick = (country: Country): void => {\r\n    dispatch(addChoosenCountries(country));\r\n    dispatch(setIsSelectCountryInputActive());\r\n  }\r\n\r\n  return (\r\n    <div className=\"route\" id=\"route\">\r\n      <div className=\"route__header\">\r\n        <div className=\"route__heading\">\r\n          <h3 className=\"route__title\">Шаг 2. Маршрут</h3>\r\n          <p className=\"route__notion\">\r\n            Укажите страны, которые вы хотели бы посетить.<br/>Это может быть одна или сразу несколько.</p>\r\n        </div>\r\n        <MiniPlan />\r\n      </div>\r\n\r\n      <ul className='route__list'>\r\n        {selectedCountries.length > 0 ? selectedCountries.map((selectedCountry) => {\r\n          return (\r\n            <SelectedCountryInput selectedCountry={selectedCountry} />\r\n          );\r\n        }) : ''}\r\n        {selectedCountries.length > 3 ? '' : <li className='route__item'>\r\n          <h3 onClick={(evt) => evt.currentTarget.closest('li')?.classList.toggle('active')}>\r\n            <p className=\"route__add-country\">Добавить страну</p>\r\n            <p className=\"route__choose-country\">Выберите страну</p>\r\n            <button className=\"route__btn-plus\"> <Plus /> </button>\r\n            <button className=\"route__btn-arrow\"> <ArrowBack /> </button>\r\n          </h3>\r\n          <div className='route__countries-wrapper'>\r\n            <ul className=\"route__letters-list\">\r\n              {/* отрисовываем буквы */}\r\n              {letterArray.map((letter: string, index: number) => {\r\n                return (\r\n                  <li className=\"step__letter-item\" key={index}>\r\n                    <button className={`step__letter-button ${choosenLetter === letter ? 'active' : ''}`}\r\n                      type=\"button\"\r\n                      onClick={() => dispatch(setLetter(letter))}>{letter}\r\n                    </button>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n            {/* отрисовываем названия стран */}\r\n            <ul className=\"route__counties-list\">\r\n              {isLoading && <div>Loading...</div>}\r\n              {filteredCountries?.map((country: Country) => {\r\n                return (\r\n                  <li className=\"route__counties-item counties\" key={country.name}\r\n                    onClick={(evt) => {\r\n                      handleCountryClick(country);\r\n                      evt.currentTarget.closest('.route__item')?.classList.remove('active');\r\n                    }}\r\n                  >{country.name}</li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </li>}\r\n\r\n      </ul>\r\n\r\n      <div className=\"group-btn\">\r\n        <a className=\"route-btn\" href=\"#entertainment\" onClick={() => setDataToPostCountries()}>\r\n          <span>Следующий шаг</span>\r\n          <NextStep />\r\n        </a>\r\n        <a href=\"#dates\" className=\"route-btn btn-back\">\r\n          <NextStep />\r\n          <span>На шаг назад</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// function Route({ countriesData }: CountriesItemProps): JSX.Element {\r\n\r\n\r\n//   return (\r\n//     <section className=\"route\">\r\n//       <div className=\"route__header\">\r\n//         <h2 className=\"route__title\">\r\n//           Шаг 2. Маршрут\r\n//         </h2>\r\n//         <p className=\"route__notion\">\r\n//           Укажите страны, которые вы хотели бы посетить. Это может быть одна или сразу несколько.\r\n//         </p>\r\n//         <MiniPlan />\r\n//       </div>\r\n//       <ul className=\"route__counties-list\">\r\n//         <li className=\"route__counties-item counties\">\r\n//           {countriesData?.length ? (\r\n//             <>\r\n//               <ul className=\"counties__list\">\r\n//                 {countriesData?.map((countryData) => <CountryItem countryData={countryData} />)}\r\n//               </ul>\r\n//             </>\r\n//           ) : null}\r\n//         </li>\r\n//         <li className=\"route__counties-item\">\r\n//           {countriesData?.length ? (\r\n//             <>\r\n//               <ul className=\"\">\r\n//                 {countriesData?.map((countryData) => <CountryItem countryData={countryData} />)}\r\n//               </ul>\r\n//             </>\r\n//           ) : null}\r\n//         </li>\r\n//         <li className=\"route__counties-item\">\r\n//           {countriesData?.length ? (\r\n//             <>\r\n//               <ul className=\"\">\r\n//                 {countriesData?.map((countryData) => <CountryItem countryData={countryData} />)}\r\n//               </ul>\r\n//             </>\r\n//           ) : null}\r\n//         </li>\r\n//         <li className=\"route__counties-item\">\r\n//           {countriesData?.length ? (\r\n//             <>\r\n//               <ul className=\"\">\r\n//                 {countriesData?.map((countryData) => <CountryItem countryData={countryData} />)}\r\n//               </ul>\r\n//             </>\r\n//           ) : null}\r\n//         </li>\r\n//       </ul>\r\n//       <div>\r\n//         <p>\r\n//           Добавить страну\r\n//         </p>\r\n//       </div>\r\n//       <a href=\"#\">\r\n//         <span>Следующий шаг</span>\r\n//         <NextStep />\r\n//       </a>\r\n//       <a href=\"#\">\r\n//         <span>Предыдущий шаг</span>\r\n//         <NextStep />\r\n//       </a>\r\n//     </section>\r\n//   );\r\n// }\r\n\r\n\r\nexport default Route;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}